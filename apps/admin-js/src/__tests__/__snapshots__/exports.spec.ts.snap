// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`exports > exports from index.ts 1`] = `
[
  "ActionButton",
  "AdminAction",
  "AdminComponent",
  "AdminContextKey",
  "AdminIcon",
  "AdminInstanceContextKey",
  "AdminModalKey",
  "AdminView",
  "BackendEndpoint",
  "BulkSelectCheckbox",
  "ChildProductSettingsView",
  "FORM_KEYS",
  "FORM_KEY_ACCOUNT_SETTINGS",
  "FORM_KEY_CHILD_PRODUCT_SETTINGS",
  "FORM_KEY_MODAL",
  "FORM_KEY_MODAL_PRINT_OPTIONS",
  "FORM_KEY_MODAL_RETURN_OPTIONS",
  "FORM_KEY_MODAL_SHIPMENT_OPTIONS",
  "FORM_KEY_PLUGIN_SETTINGS",
  "FORM_KEY_PRODUCT_SETTINGS",
  "FormHook",
  "FrontendEndpoint",
  "INJECT_ADMIN_INSTANCE",
  "INJECT_GLOBAL_PDK_ADMIN",
  "LogLevel",
  "ModalsView",
  "NotificationCategory",
  "NotificationContainer",
  "NotificationsView",
  "OrderBoxView",
  "OrderListItemView",
  "PdkAdmin",
  "PlainElement",
  "PluginSettingsView",
  "ProductSettingsView",
  "QUERY_KEY_ORDER",
  "QUERY_KEY_SHIPMENT",
  "ResetButton",
  "ReturnsForm",
  "ShipmentBarcode",
  "ShipmentOptionsForm",
  "ShipmentStatus",
  "Size",
  "SortType",
  "Status",
  "StatusIndicator",
  "StopActionHandler",
  "SubmitButton",
  "TabNavigation",
  "TriState",
  "Variant",
  "allAdminComponentNames",
  "createAdminConfig",
  "createFormElement",
  "createHandlerWithParameters",
  "createLogger",
  "createMutationHandler",
  "createOrdersMutationHandler",
  "createPdkAdmin",
  "createPdkAdminPlugin",
  "createQueryHandler",
  "createShipmentsMutationHandler",
  "defineAction",
  "deleteAccountAction",
  "doMutate",
  "executeAction",
  "executeAfterHandle",
  "executeBeforeHandle",
  "executeHandler",
  "executeNextAction",
  "fetchDynamicContextAction",
  "fetchPluginSettingsViewContextAction",
  "generateFieldId",
  "getActionIdentifier",
  "modalCloseAction",
  "modalSubmitFormAction",
  "openOrPrintPdf",
  "optionalAdminActionContainerComponentNames",
  "optionalAdminPlainWrapperComponentNames",
  "orderExportAction",
  "orderExportToShipmentsAction",
  "orderViewInBackofficeAction",
  "ordersEditAction",
  "ordersExportPrintShipmentsAction",
  "ordersFetchAction",
  "ordersPrintAction",
  "ordersUpdateAction",
  "pluginSettingsUpdateAction",
  "prefixComponent",
  "refreshAccountAction",
  "requiredAdminComponentNames",
  "resolveOrderParameters",
  "resolvePrintParameters",
  "resolveQuerySuffix",
  "shipmentActions",
  "shipmentsDeleteAction",
  "shipmentsExportReturnAction",
  "shipmentsPrintAction",
  "shipmentsUpdateAction",
  "updateAccountAction",
  "useActionStore",
  "useAdminConfig",
  "useAppInfo",
  "useCheckboxGroupContext",
  "useCreateWebhooksMutation",
  "useDeleteAccountMutation",
  "useDeleteShipmentsMutation",
  "useDeleteWebhooksMutation",
  "useDropOffInputContext",
  "useDropdownData",
  "useElement",
  "useElementContext",
  "useExportOrdersMutation",
  "useExportReturnMutation",
  "useFetchContextQuery",
  "useFetchOrdersQuery",
  "useFetchProductsQuery",
  "useFetchShipmentsQuery",
  "useFetchWebhooksQuery",
  "useForm",
  "useFormBuilder",
  "useFormatter",
  "useGlobalContext",
  "useGlobalPdkAdmin",
  "useInputWithOptionsContext",
  "useLanguage",
  "useLogger",
  "useModalContext",
  "useModalElementContext",
  "useModalStore",
  "useNotificationStore",
  "useOrderData",
  "useOrdersData",
  "usePdkMutation",
  "usePrintOrdersMutation",
  "usePrintShipmentsMutation",
  "useProductData",
  "useQueryStore",
  "useRadioGroupContext",
  "useSelectInputContext",
  "useStoreQuery",
  "useTriStateInputContext",
  "useUpdateAccountMutation",
  "useUpdateOrdersMutation",
  "useUpdatePluginSettingsMutation",
  "useUpdateProductSettingsMutation",
  "useUpdateShipmentsMutation",
  "useWeekdays",
  "waitForLabelPrompt",
  "webhooksCreateAction",
  "webhooksDeleteAction",
  "webhooksFetchAction",
]
`;

exports[`exports > exports from testing.ts 1`] = `
[
  "doComponentTestSetup",
  "doComponentTestTeardown",
  "mockDefaultAccount",
  "mockDefaultAppConfig",
  "mockDefaultAppInfo",
  "mockDefaultCarriers",
  "mockDefaultConfig",
  "mockDefaultDynamicContext",
  "mockDefaultEndpoints",
  "mockDefaultGlobalContext",
  "mockDefaultLogger",
  "mockDefaultPlatform",
  "mockDefaultPluginSettings",
  "mockDefaultPrintOptionsView",
  "mockDefaultShop",
  "mockDefaultTranslations",
]
`;
