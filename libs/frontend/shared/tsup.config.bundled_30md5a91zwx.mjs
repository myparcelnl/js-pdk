// ../../build/tsup/src/createBanner.ts
var createBanner = () => {
  return `/** ${process.env.npm_package_name} v${process.env.npm_package_version} */`;
};

// ../../build/tsup/src/externalDependencies.ts
var externalDependencies = [
  "@myparcel-pdk/common",
  "@myparcel-pdk/frontend-core",
  "@myparcel-pdk/frontend-shared",
  "@myparcel/pdk-components",
  "@myparcel/pdk-frontend",
  "@myparcel/sdk",
  "@myparcel/ts-utils",
  "@myparcel/vue-form-builder",
  "@tanstack/vue-query",
  "@types/lodash-es",
  "@vueuse/core",
  "lodash",
  "lodash-es",
  "lodash-unified",
  "pinia",
  "tsup",
  "vite",
  "vue"
];

// ../../build/tsup/src/commonTsupConfig.ts
var banner = createBanner();
var commonTsupConfig = {
  banner: {
    js: banner,
    css: banner
  },
  entry: ["src/index.ts"],
  external: externalDependencies,
  format: ["esm"],
  outDir: "lib",
  target: "esnext",
  tsconfig: "tsconfig.build.json"
};

// ../../build/tsup/src/createTsupConfig.ts
import { mergeConfig } from "vite";
var createTsupConfig = (config) => {
  const resolvedConfig = config ?? {};
  return mergeConfig(commonTsupConfig, resolvedConfig);
};

// tsup.config.ts
var tsup_config_default = createTsupConfig();
export {
  tsup_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vYnVpbGQvdHN1cC9zcmMvY3JlYXRlQmFubmVyLnRzIiwgIi4uLy4uL2J1aWxkL3RzdXAvc3JjL2V4dGVybmFsRGVwZW5kZW5jaWVzLnRzIiwgIi4uLy4uL2J1aWxkL3RzdXAvc3JjL2NvbW1vblRzdXBDb25maWcudHMiLCAiLi4vLi4vYnVpbGQvdHN1cC9zcmMvY3JlYXRlVHN1cENvbmZpZy50cyIsICJ0c3VwLmNvbmZpZy50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiY29uc3QgX19pbmplY3RlZF9maWxlbmFtZV9fID0gXCIvVXNlcnMvZWRpZS9TaXRlcy9teXBhcmNlbC9wZGstZnJvbnRlbmQvbGlicy9idWlsZC90c3VwL3NyYy9jcmVhdGVCYW5uZXIudHNcIjtjb25zdCBfX2luamVjdGVkX2Rpcm5hbWVfXyA9IFwiL1VzZXJzL2VkaWUvU2l0ZXMvbXlwYXJjZWwvcGRrLWZyb250ZW5kL2xpYnMvYnVpbGQvdHN1cC9zcmNcIjtjb25zdCBfX2luamVjdGVkX2ltcG9ydF9tZXRhX3VybF9fID0gXCJmaWxlOi8vL1VzZXJzL2VkaWUvU2l0ZXMvbXlwYXJjZWwvcGRrLWZyb250ZW5kL2xpYnMvYnVpbGQvdHN1cC9zcmMvY3JlYXRlQmFubmVyLnRzXCI7ZXhwb3J0IGNvbnN0IGNyZWF0ZUJhbm5lciA9ICgpOiBzdHJpbmcgPT4ge1xuICByZXR1cm4gYC8qKiAke3Byb2Nlc3MuZW52Lm5wbV9wYWNrYWdlX25hbWV9IHYke3Byb2Nlc3MuZW52Lm5wbV9wYWNrYWdlX3ZlcnNpb259ICovYDtcbn07XG4iLCAiY29uc3QgX19pbmplY3RlZF9maWxlbmFtZV9fID0gXCIvVXNlcnMvZWRpZS9TaXRlcy9teXBhcmNlbC9wZGstZnJvbnRlbmQvbGlicy9idWlsZC90c3VwL3NyYy9leHRlcm5hbERlcGVuZGVuY2llcy50c1wiO2NvbnN0IF9faW5qZWN0ZWRfZGlybmFtZV9fID0gXCIvVXNlcnMvZWRpZS9TaXRlcy9teXBhcmNlbC9wZGstZnJvbnRlbmQvbGlicy9idWlsZC90c3VwL3NyY1wiO2NvbnN0IF9faW5qZWN0ZWRfaW1wb3J0X21ldGFfdXJsX18gPSBcImZpbGU6Ly8vVXNlcnMvZWRpZS9TaXRlcy9teXBhcmNlbC9wZGstZnJvbnRlbmQvbGlicy9idWlsZC90c3VwL3NyYy9leHRlcm5hbERlcGVuZGVuY2llcy50c1wiO2V4cG9ydCBjb25zdCBleHRlcm5hbERlcGVuZGVuY2llcyA9IFtcbiAgJ0BteXBhcmNlbC1wZGsvY29tbW9uJyxcbiAgJ0BteXBhcmNlbC1wZGsvZnJvbnRlbmQtY29yZScsXG4gICdAbXlwYXJjZWwtcGRrL2Zyb250ZW5kLXNoYXJlZCcsXG4gICdAbXlwYXJjZWwvcGRrLWNvbXBvbmVudHMnLFxuICAnQG15cGFyY2VsL3Bkay1mcm9udGVuZCcsXG4gICdAbXlwYXJjZWwvc2RrJyxcbiAgJ0BteXBhcmNlbC90cy11dGlscycsXG4gICdAbXlwYXJjZWwvdnVlLWZvcm0tYnVpbGRlcicsXG4gICdAdGFuc3RhY2svdnVlLXF1ZXJ5JyxcbiAgJ0B0eXBlcy9sb2Rhc2gtZXMnLFxuICAnQHZ1ZXVzZS9jb3JlJyxcbiAgJ2xvZGFzaCcsXG4gICdsb2Rhc2gtZXMnLFxuICAnbG9kYXNoLXVuaWZpZWQnLFxuICAncGluaWEnLFxuICAndHN1cCcsXG4gICd2aXRlJyxcbiAgJ3Z1ZScsXG5dO1xuIiwgImNvbnN0IF9faW5qZWN0ZWRfZmlsZW5hbWVfXyA9IFwiL1VzZXJzL2VkaWUvU2l0ZXMvbXlwYXJjZWwvcGRrLWZyb250ZW5kL2xpYnMvYnVpbGQvdHN1cC9zcmMvY29tbW9uVHN1cENvbmZpZy50c1wiO2NvbnN0IF9faW5qZWN0ZWRfZGlybmFtZV9fID0gXCIvVXNlcnMvZWRpZS9TaXRlcy9teXBhcmNlbC9wZGstZnJvbnRlbmQvbGlicy9idWlsZC90c3VwL3NyY1wiO2NvbnN0IF9faW5qZWN0ZWRfaW1wb3J0X21ldGFfdXJsX18gPSBcImZpbGU6Ly8vVXNlcnMvZWRpZS9TaXRlcy9teXBhcmNlbC9wZGstZnJvbnRlbmQvbGlicy9idWlsZC90c3VwL3NyYy9jb21tb25Uc3VwQ29uZmlnLnRzXCI7aW1wb3J0IHtPcHRpb25zfSBmcm9tICd0c3VwJztcbmltcG9ydCB7Y3JlYXRlQmFubmVyfSBmcm9tICcuL2NyZWF0ZUJhbm5lcic7XG5pbXBvcnQge2V4dGVybmFsRGVwZW5kZW5jaWVzfSBmcm9tICcuL2V4dGVybmFsRGVwZW5kZW5jaWVzJztcblxuY29uc3QgYmFubmVyID0gY3JlYXRlQmFubmVyKCk7XG5cbmV4cG9ydCBjb25zdCBjb21tb25Uc3VwQ29uZmlnOiBPcHRpb25zID0ge1xuICBiYW5uZXI6IHtcbiAgICBqczogYmFubmVyLFxuICAgIGNzczogYmFubmVyLFxuICB9LFxuICBlbnRyeTogWydzcmMvaW5kZXgudHMnXSxcbiAgZXh0ZXJuYWw6IGV4dGVybmFsRGVwZW5kZW5jaWVzLFxuICBmb3JtYXQ6IFsnZXNtJ10sXG4gIG91dERpcjogJ2xpYicsXG4gIHRhcmdldDogJ2VzbmV4dCcsXG4gIHRzY29uZmlnOiAndHNjb25maWcuYnVpbGQuanNvbicsXG59O1xuIiwgImNvbnN0IF9faW5qZWN0ZWRfZmlsZW5hbWVfXyA9IFwiL1VzZXJzL2VkaWUvU2l0ZXMvbXlwYXJjZWwvcGRrLWZyb250ZW5kL2xpYnMvYnVpbGQvdHN1cC9zcmMvY3JlYXRlVHN1cENvbmZpZy50c1wiO2NvbnN0IF9faW5qZWN0ZWRfZGlybmFtZV9fID0gXCIvVXNlcnMvZWRpZS9TaXRlcy9teXBhcmNlbC9wZGstZnJvbnRlbmQvbGlicy9idWlsZC90c3VwL3NyY1wiO2NvbnN0IF9faW5qZWN0ZWRfaW1wb3J0X21ldGFfdXJsX18gPSBcImZpbGU6Ly8vVXNlcnMvZWRpZS9TaXRlcy9teXBhcmNlbC9wZGstZnJvbnRlbmQvbGlicy9idWlsZC90c3VwL3NyYy9jcmVhdGVUc3VwQ29uZmlnLnRzXCI7aW1wb3J0IHtPcHRpb25zfSBmcm9tICd0c3VwJztcbmltcG9ydCB7UmVjdXJzaXZlUGFydGlhbH0gZnJvbSAnQG15cGFyY2VsL3RzLXV0aWxzJztcbmltcG9ydCB7Y29tbW9uVHN1cENvbmZpZ30gZnJvbSAnLi9jb21tb25Uc3VwQ29uZmlnJztcbmltcG9ydCB7bWVyZ2VDb25maWd9IGZyb20gJ3ZpdGUnO1xuXG50eXBlIENyZWF0ZVRzdXBDb25maWcgPSAoY29uZmlnPzogUmVjdXJzaXZlUGFydGlhbDxPcHRpb25zPikgPT4gT3B0aW9ucztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVRzdXBDb25maWc6IENyZWF0ZVRzdXBDb25maWcgPSAoY29uZmlnKSA9PiB7XG4gIGNvbnN0IHJlc29sdmVkQ29uZmlnOiBSZWN1cnNpdmVQYXJ0aWFsPE9wdGlvbnM+ID0gY29uZmlnID8/IHt9O1xuXG4gIHJldHVybiBtZXJnZUNvbmZpZyhjb21tb25Uc3VwQ29uZmlnLCByZXNvbHZlZENvbmZpZyk7XG59O1xuIiwgImNvbnN0IF9faW5qZWN0ZWRfZmlsZW5hbWVfXyA9IFwiL1VzZXJzL2VkaWUvU2l0ZXMvbXlwYXJjZWwvcGRrLWZyb250ZW5kL2xpYnMvZnJvbnRlbmQvc2hhcmVkL3RzdXAuY29uZmlnLnRzXCI7Y29uc3QgX19pbmplY3RlZF9kaXJuYW1lX18gPSBcIi9Vc2Vycy9lZGllL1NpdGVzL215cGFyY2VsL3Bkay1mcm9udGVuZC9saWJzL2Zyb250ZW5kL3NoYXJlZFwiO2NvbnN0IF9faW5qZWN0ZWRfaW1wb3J0X21ldGFfdXJsX18gPSBcImZpbGU6Ly8vVXNlcnMvZWRpZS9TaXRlcy9teXBhcmNlbC9wZGstZnJvbnRlbmQvbGlicy9mcm9udGVuZC9zaGFyZWQvdHN1cC5jb25maWcudHNcIjtpbXBvcnQge2NyZWF0ZVRzdXBDb25maWd9IGZyb20gJ0BteXBhcmNlbC1wZGsvYnVpbGQtdHN1cCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVRzdXBDb25maWcoKTtcbiJdLAogICJtYXBwaW5ncyI6ICI7QUFBd1UsSUFBTSxlQUFlLE1BQWM7QUFDelcsU0FBTyxPQUFPLFFBQVEsSUFBSSxxQkFBcUIsUUFBUSxJQUFJO0FBQzdEOzs7QUNGd1YsSUFBTSx1QkFBdUI7QUFBQSxFQUNuWDtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQ0Y7OztBQ2ZBLElBQU0sU0FBUyxhQUFhO0FBRXJCLElBQU0sbUJBQTRCO0FBQUEsRUFDdkMsUUFBUTtBQUFBLElBQ04sSUFBSTtBQUFBLElBQ0osS0FBSztBQUFBLEVBQ1A7QUFBQSxFQUNBLE9BQU8sQ0FBQyxjQUFjO0FBQUEsRUFDdEIsVUFBVTtBQUFBLEVBQ1YsUUFBUSxDQUFDLEtBQUs7QUFBQSxFQUNkLFFBQVE7QUFBQSxFQUNSLFFBQVE7QUFBQSxFQUNSLFVBQVU7QUFDWjs7O0FDZEEsU0FBUSxtQkFBa0I7QUFJbkIsSUFBTSxtQkFBcUMsQ0FBQyxXQUFXO0FBQzVELFFBQU0saUJBQTRDLFVBQVUsQ0FBQztBQUU3RCxTQUFPLFlBQVksa0JBQWtCLGNBQWM7QUFDckQ7OztBQ1RBLElBQU8sc0JBQVEsaUJBQWlCOyIsCiAgIm5hbWVzIjogW10KfQo=
