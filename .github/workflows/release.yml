name: 'Release new version ðŸš€'

on:
  workflow_dispatch:

  schedule:
    # every day at 18:00 UTC
    - cron: '0 18 * * *'

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

jobs:
  test:
    uses: ./.github/workflows/test.yml
    secrets: inherit

  release:
    runs-on: ubuntu-22.04
    needs: test
    outputs:
      released: ${{ steps.release.outputs.released }}
    steps:
      - uses: myparcelnl/actions/setup-git-credentials@v4
        id: credentials
        with:
          app-id: ${{ secrets.MYPARCEL_APP_ID }}
          private-key: ${{ secrets.MYPARCEL_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.credentials.outputs.token }}
          fetch-depth: 0

      - uses: myparcelnl/actions/yarn-install@v4
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - uses: myparcelnl/actions/nx-run-many@v4
        env:
          NX_BRANCH: production
        with:
          target: 'build'

      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./apps/admin-demo/dist

      - name: 'Run monodeploy'
        id: release
        #language=bash
        run: |
          yarn monodeploy \
            --config-file monodeploy.config.cjs \
            --log-level 0
        env:
          GH_TOKEN: ${{ steps.credentials.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  rebase-prs:
    needs: release
    uses: ./.github/workflows/rebase-prs.yml
    secrets: inherit

  deploy:
    needs: release
    runs-on: ubuntu-22.04
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4

  trigger:
    needs: release
    if: needs.release.outputs.released == 'true'
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        repo: ${{ fromJSON(vars.PDK_DEPENDENT_REPOS) }}
    steps:
      - uses: myparcelnl/actions/repository-dispatch@v4
        with:
          app-id: ${{ secrets.MYPARCEL_APP_ID }}
          private-key: ${{ secrets.MYPARCEL_APP_PRIVATE_KEY }}
          repository: ${{ matrix.repo }}
          event-type: 'pdk-update'

  notify-on-failure:
    needs:
      - test
      - release
      - deploy
    if: always() && contains(needs.*.result, 'failure')
    uses: myparcelnl/actions/.github/workflows/notify-on-failure.yml@v4
    secrets: inherit
