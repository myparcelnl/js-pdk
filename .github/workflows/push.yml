name: 'Release ðŸš€'

on:
  push:
    branches:
      - alpha
      - beta

concurrency:
  group: push-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  test:
    uses: ./.github/workflows/test.yml
    secrets: inherit

  release:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - uses: myparcelnl/actions/setup-git-credentials@v3
        id: credentials
        with:
          app-id: ${{ secrets.MYPARCEL_APP_ID }}
          private-key: ${{ secrets.MYPARCEL_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ steps.credentials.outputs.token }}

      - uses: ./.github/actions/install

      - uses: ./.github/actions/build

      - uses: actions/upload-pages-artifact@v1
        with:
          path: ./apps/admin-demo/dist

      - name: 'Run monodeploy'
        run: |
          yarn monodeploy \
            --config-file monodeploy.config.cjs \
            --log-level 0
        env:
          GH_TOKEN: ${{ steps.credentials.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  rebase-prs:
    needs: release
    if: always()
    runs-on: ubuntu-22.04
    steps:
      - uses: myparcelnl/actions/setup-git-credentials@v3
        id: credentials
        with:
          app-id: ${{ secrets.MYPARCEL_APP_ID }}
          private-key: ${{ secrets.MYPARCEL_APP_PRIVATE_KEY }}

      - uses: peter-evans/rebase@v2
        with:
          token: ${{ steps.credentials.outputs.token }}
          base: ${{ github.ref_name }}
          exclude-drafts: true
          exclude-labels: 'dependencies'

  deploy:
    needs: release
    runs-on: ubuntu-22.04
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v2
