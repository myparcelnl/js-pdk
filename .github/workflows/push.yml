name: 'Release ðŸš€'

on:
  push:
    branches:
      - alpha
      - beta

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: 'Run unit tests ðŸ§ª'
    runs-on: ubuntu-22.04
    steps:
      - uses: myparcelnl/actions/setup-git-credentials@v3
        id: credentials
        with:
          app-id: ${{ secrets.MYPARCEL_APP_ID }}
          private-key: ${{ secrets.MYPARCEL_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v3
        with:
          token: ${{ steps.credentials.outputs.token }}

      - uses: ./.github/actions/setup

      - uses: myparcelnl/actions/bundlewatch@v3
        with:
          token: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}

      - name: 'Run tests'
        run: |
          yarn nx run-many \
            --parallel \
            --target=test:run \
            --output-style=static

      - name: 'Upload coverage artifact'
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: |
            apps/**/coverage/clover.xml
            libs/**/coverage/clover.xml

  coverage:
    name: 'Upload coverage reports ðŸ“Š'
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: coverage

      - uses: codecov/codecov-action@v3
        continue-on-error: true

      - uses: codacy/codacy-coverage-reporter-action@v1
        continue-on-error: true
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

  release:
    name: 'Publish new release ðŸš€'
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - uses: myparcelnl/actions/setup-git-credentials@v3
        id: credentials
        with:
          app-id: ${{ secrets.MYPARCEL_APP_ID }}
          private-key: ${{ secrets.MYPARCEL_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ steps.credentials.outputs.token }}

      - uses: ./.github/actions/setup

      - name: 'Run monodeploy'
        run: |
          yarn monodeploy \
            --config-file monodeploy.config.cjs \
            --log-level 0
        env:
          GH_TOKEN: ${{ steps.credentials.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 'Dispatch deploy demo command'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ steps.credentials.outputs.token }}
          event-type: deploy-demo
